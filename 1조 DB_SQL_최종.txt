/* 사원 */
CREATE TABLE MEMBER (
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	DEPT_NO NUMBER NOT NULL, /* 부서번호 */
	POSITION_NO NUMBER NOT NULL, /* 직급번호 */
	MEM_NAME VARCHAR2(100) NOT NULL, /* 사원이름 */
	MEM_ID VARCHAR2(50) NOT NULL, /* 사원아이디 */
	MEM_PWD VARCHAR2(50), /* 사원비밀번호 */
	MEM_TEL VARCHAR2(50), /* 핸드폰번호 */
	MEM_SAL NUMBER NOT NULL, /* 연봉 */
	CONTRACT_START DATE DEFAULT SYSDATE, /* 입사일 */
	CONTRACT_DONE DATE, /* 퇴사일 */
	TYPE VARCHAR2(50) NOT NULL, /* 고용형태 */
	MEM_ADDRESS VARCHAR2(500), /* 주소 */
	MEM_ADDRESS_DETAIL VARCHAR2(500), /* 주소상세 */
	MEM_ZIPCODE VARCHAR2(50), /* 우편번호 */
	MEM_IMAGE VARCHAR2(500), /* 이미지 */
	MEM_BRITH DATE /* 생년월일 */
);

COMMENT ON TABLE MEMBER IS '사원';

COMMENT ON COLUMN MEMBER.MEM_NO IS '사원번호';

COMMENT ON COLUMN MEMBER.DEPT_NO IS '부서번호';

COMMENT ON COLUMN MEMBER.POSITION_NO IS '직급번호';

COMMENT ON COLUMN MEMBER.MEM_NAME IS '사원이름';

COMMENT ON COLUMN MEMBER.MEM_ID IS '사원아이디';

COMMENT ON COLUMN MEMBER.MEM_PWD IS '사원비밀번호';

COMMENT ON COLUMN MEMBER.MEM_TEL IS '핸드폰번호';

COMMENT ON COLUMN MEMBER.MEM_SAL IS '연봉';

COMMENT ON COLUMN MEMBER.CONTRACT_START IS '입사일';

COMMENT ON COLUMN MEMBER.CONTRACT_DONE IS '퇴사일';

COMMENT ON COLUMN MEMBER.TYPE IS '고용형태';

COMMENT ON COLUMN MEMBER.MEM_ADDRESS IS '주소';

COMMENT ON COLUMN MEMBER.MEM_ADDRESS_DETAIL IS '주소상세';

COMMENT ON COLUMN MEMBER.MEM_ZIPCODE IS '우편번호';

COMMENT ON COLUMN MEMBER.MEM_IMAGE IS '이미지';

COMMENT ON COLUMN MEMBER.MEM_BRITH IS '생년월일';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		MEM_NO ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEM_NO
		);

/* 부서 */
CREATE TABLE DEPT (
	DEPT_NO NUMBER NOT NULL, /* 부서번호 */
	DEPT_NAME VARCHAR2(50) NOT NULL, /* 부서명 */
	DEPT_TEL VARCHAR2(50) NOT NULL /* 부서대표전화번호 */
);

COMMENT ON TABLE DEPT IS '부서';

COMMENT ON COLUMN DEPT.DEPT_NO IS '부서번호';

COMMENT ON COLUMN DEPT.DEPT_NAME IS '부서명';

COMMENT ON COLUMN DEPT.DEPT_TEL IS '부서대표전화번호';

CREATE UNIQUE INDEX PK_DEPT
	ON DEPT (
		DEPT_NO ASC
	);

ALTER TABLE DEPT
	ADD
		CONSTRAINT PK_DEPT
		PRIMARY KEY (
			DEPT_NO
		);

/* 직급 */
CREATE TABLE POSITION (
	POSITION_NO NUMBER NOT NULL, /* 직급번호 */
	POSITION_NAME VARCHAR2(100) NOT NULL /* 직급명 */
);

COMMENT ON TABLE POSITION IS '직급';

COMMENT ON COLUMN POSITION.POSITION_NO IS '직급번호';

COMMENT ON COLUMN POSITION.POSITION_NAME IS '직급명';

CREATE UNIQUE INDEX PK_POSITION
	ON POSITION (
		POSITION_NO ASC
	);

ALTER TABLE POSITION
	ADD
		CONSTRAINT PK_POSITION
		PRIMARY KEY (
			POSITION_NO
		);

/* 공지사항 */
CREATE TABLE NOTICE (
	NOTICE_NO NUMBER NOT NULL, /* 공지사항번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	NOTICE_TITLE VARCHAR2(100) NOT NULL, /* 공지제목 */
	NOTICE_CONTENT VARCHAR2(3000) NOT NULL, /* 공지내용 */
	REGDATE DATE DEFAULT SYSDATE, /* 공지등록일 */
	STATUS VARCHAR2(10) DEFAULT Y, /* 공지공개상태 */
	VIEWS NUMBER DEFAULT 0 /* 조회수 */
);

COMMENT ON TABLE NOTICE IS '공지사항';

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항번호';

COMMENT ON COLUMN NOTICE.MEM_NO IS '사원번호';

COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '공지제목';

COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '공지내용';

COMMENT ON COLUMN NOTICE.REGDATE IS '공지등록일';

COMMENT ON COLUMN NOTICE.STATUS IS '공지공개상태';

COMMENT ON COLUMN NOTICE.VIEWS IS '조회수';

CREATE UNIQUE INDEX PK_NOTICE
	ON NOTICE (
		NOTICE_NO ASC
	);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT PK_NOTICE
		PRIMARY KEY (
			NOTICE_NO
		);

/* 출퇴근 */
CREATE TABLE ATTENDANCE (
	ATTENDANCE_NO NUMBER NOT NULL, /* 출퇴근번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	IN_TIME DATE, /* 출근시간 */
	OUT_TIME DATE, /* 퇴근시간 */
	STATUS VARCHAR2(10) /* 상태 */
);

COMMENT ON TABLE ATTENDANCE IS '출퇴근';

COMMENT ON COLUMN ATTENDANCE.ATTENDANCE_NO IS '출퇴근번호';

COMMENT ON COLUMN ATTENDANCE.MEM_NO IS '사원번호';

COMMENT ON COLUMN ATTENDANCE.IN_TIME IS '출근시간';

COMMENT ON COLUMN ATTENDANCE.OUT_TIME IS '퇴근시간';

COMMENT ON COLUMN ATTENDANCE.STATUS IS '상태';

CREATE UNIQUE INDEX PK_ATTENDANCE
	ON ATTENDANCE (
		ATTENDANCE_NO ASC
	);

ALTER TABLE ATTENDANCE
	ADD
		CONSTRAINT PK_ATTENDANCE
		PRIMARY KEY (
			ATTENDANCE_NO
		);

/* 자유게시판 */
CREATE TABLE BOARD (
	BOARD_NO NUMBER NOT NULL, /* 자유게시판번호 */
	MEM_NO NUMBER, /* 사원번호 */
	STAFF_NO NUMBER, /* 스태프번호 */
	BOARD_TITLE VARCHAR2(100), /* 자유제목 */
	BOARD_CONTENT VARCHAR2(3000), /* 자유내용 */
	REGDATE DATE DEFAULT SYSDATE, /* 자유등록일 */
	STATUS VARCHAR2(10) DEFAULT Y, /* 자유공개상태 */
	LIKE_COUNT NUMBER DEFAULT 0, /* 좋아요 */
	GROUP_NO NUMBER DEFAULT 0, /* 그룹번호 */
	SORTNO NUMBER DEFAULT 0, /* 댓글순서 */
	STEP NUMBER DEFAULT 0, /* 댓글여부 */
	VIEWS NUMBER DEFAULT 0 /* 자유조회수 */
);

COMMENT ON TABLE BOARD IS '자유게시판';

COMMENT ON COLUMN BOARD.BOARD_NO IS '자유게시판번호';

COMMENT ON COLUMN BOARD.MEM_NO IS '사원번호';

COMMENT ON COLUMN BOARD.STAFF_NO IS '스태프번호';

COMMENT ON COLUMN BOARD.BOARD_TITLE IS '자유제목';

COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '자유내용';

COMMENT ON COLUMN BOARD.REGDATE IS '자유등록일';

COMMENT ON COLUMN BOARD.STATUS IS '자유공개상태';

COMMENT ON COLUMN BOARD.LIKE_COUNT IS '좋아요';

COMMENT ON COLUMN BOARD.GROUP_NO IS '그룹번호';

COMMENT ON COLUMN BOARD.SORTNO IS '댓글순서';

COMMENT ON COLUMN BOARD.STEP IS '댓글여부';

COMMENT ON COLUMN BOARD.VIEWS IS '자유조회수';

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BOARD_NO ASC
	);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NO
		);

/* 스태프 */
CREATE TABLE STAFF (
	STAFF_NO NUMBER NOT NULL, /* 스태프번호 */
	DEPT_NO NUMBER NOT NULL, /* 부서번호 */
	STAFF_NAME VARCHAR2(100) NOT NULL, /* 스태프명 */
	STAFF_POSITION VARCHAR2(100) NOT NULL, /* 스태프포지션 */
	STAFF_BACK_NO NUMBER, /* 스태프등번호 */
	STAFF_BIRTH DATE, /* 스태프생년월일 */
	STAFF_SAL NUMBER NOT NULL, /* 스태프연봉 */
	CONTRACT_START DATE NOT NULL, /* 스태프계약시작일 */
	CONTRACT_DONE DATE NOT NULL, /* 스태프계약만료일 */
	STAFF_TEL VARCHAR2(50), /* 스태프연락처 */
	STAFF_INFO VARCHAR2(500), /* 스태프특이사항 */
	STAFF_ADDR VARCHAR2(500), /* 스태프주소 */
	STAFF_ADDR_DETAIL VARCHAR2(500), /* 스태프주소상세 */
	STAFF_ZIPCODE VARCHAR2(50), /* 스태프우편번호 */
	STAFF_STATUS VARCHAR2(10) DEFAULT Y, /* 스태프상태 */
	STAFF_ID VARCHAR2(50) NOT NULL, /* 스태프아이디 */
	STAFF_PWD VARCHAR2(50) NOT NULL, /* 스태프비밀번호 */
	STAFF_IMAGE VARCHAR2(500) /* 이미지 */
);

COMMENT ON TABLE STAFF IS '스태프';

COMMENT ON COLUMN STAFF.STAFF_NO IS '스태프번호';

COMMENT ON COLUMN STAFF.DEPT_NO IS '부서번호';

COMMENT ON COLUMN STAFF.STAFF_NAME IS '스태프명';

COMMENT ON COLUMN STAFF.STAFF_POSITION IS '스태프포지션';

COMMENT ON COLUMN STAFF.STAFF_BACK_NO IS '스태프등번호';

COMMENT ON COLUMN STAFF.STAFF_BIRTH IS '스태프생년월일';

COMMENT ON COLUMN STAFF.STAFF_SAL IS '스태프연봉';

COMMENT ON COLUMN STAFF.CONTRACT_START IS '스태프계약시작일';

COMMENT ON COLUMN STAFF.CONTRACT_DONE IS '스태프계약만료일';

COMMENT ON COLUMN STAFF.STAFF_TEL IS '스태프연락처';

COMMENT ON COLUMN STAFF.STAFF_INFO IS '스태프특이사항';

COMMENT ON COLUMN STAFF.STAFF_ADDR IS '스태프주소';

COMMENT ON COLUMN STAFF.STAFF_ADDR_DETAIL IS '스태프주소상세';

COMMENT ON COLUMN STAFF.STAFF_ZIPCODE IS '스태프우편번호';

COMMENT ON COLUMN STAFF.STAFF_STATUS IS '스태프상태';

COMMENT ON COLUMN STAFF.STAFF_ID IS '스태프아이디';

COMMENT ON COLUMN STAFF.STAFF_PWD IS '스태프비밀번호';

COMMENT ON COLUMN STAFF.STAFF_IMAGE IS '이미지';

CREATE UNIQUE INDEX PK_STAFF
	ON STAFF (
		STAFF_NO ASC
	);

ALTER TABLE STAFF
	ADD
		CONSTRAINT PK_STAFF
		PRIMARY KEY (
			STAFF_NO
		);

/* 포지션 */
CREATE TABLE B_POSITION (
	B_POSITION_NO NUMBER NOT NULL, /* 포지션번호 */
	B_POSITION_NAME VARCHAR2(100) NOT NULL /* 포지션명 */
);

COMMENT ON TABLE B_POSITION IS '포지션';

COMMENT ON COLUMN B_POSITION.B_POSITION_NO IS '포지션번호';

COMMENT ON COLUMN B_POSITION.B_POSITION_NAME IS '포지션명';

CREATE UNIQUE INDEX PK_B_POSITION
	ON B_POSITION (
		B_POSITION_NO ASC
	);

ALTER TABLE B_POSITION
	ADD
		CONSTRAINT PK_B_POSITION
		PRIMARY KEY (
			B_POSITION_NO
		);

/* 선수단 */
CREATE TABLE TEAM (
	PLAYER_NO NUMBER NOT NULL, /* 선수번호 */
	POSITION_NO NUMBER NOT NULL, /* 포지션번호 */
	DEPT_NO NUMBER NOT NULL, /* 부서번호 */
	BACK_NO NUMBER NOT NULL, /* 등번호 */
	PLAYER_NAME VARCHAR2(50) NOT NULL, /* 선수이름 */
	PLAYER_BIRTH DATE, /* 생년월일 */
	HEIGHT NUMBER, /* 키 */
	WEIGHT NUMBER, /* 몸무게 */
	PLAYER_SAL NUMBER NOT NULL, /* 연봉 */
	CONTRACT_START DATE NOT NULL, /* 계약시작일 */
	CONTRACT_DONE DATE NOT NULL, /* 계약만료일 */
	PLAYER_TEL VARCHAR2(50) NOT NULL, /* 선수연락처 */
	PLAYER_INFO VARCHAR2(500), /* 특이사항 */
	PLAYER_STATUS VARCHAR2(10) NOT NULL, /* 상태 */
	PLAYER_ADDRESS VARCHAR2(500), /* 선수주소 */
	PLAYER_ADDRESS_DETAIL VARCHAR2(500), /* 선수주소상세 */
	PLAYER_ZIPCODE VARCHAR2(50), /* 선수우편번호 */
	PLAYER_IMAGE VARCHAR2(500) /* 이미지 */
);

COMMENT ON TABLE TEAM IS '선수단';

COMMENT ON COLUMN TEAM.PLAYER_NO IS '선수번호';

COMMENT ON COLUMN TEAM.POSITION_NO IS '포지션번호';

COMMENT ON COLUMN TEAM.DEPT_NO IS '부서번호';

COMMENT ON COLUMN TEAM.BACK_NO IS '등번호';

COMMENT ON COLUMN TEAM.PLAYER_NAME IS '선수이름';

COMMENT ON COLUMN TEAM.PLAYER_BIRTH IS '생년월일';

COMMENT ON COLUMN TEAM.HEIGHT IS '키';

COMMENT ON COLUMN TEAM.WEIGHT IS '몸무게';

COMMENT ON COLUMN TEAM.PLAYER_SAL IS '연봉';

COMMENT ON COLUMN TEAM.CONTRACT_START IS '계약시작일';

COMMENT ON COLUMN TEAM.CONTRACT_DONE IS '계약만료일';

COMMENT ON COLUMN TEAM.PLAYER_TEL IS '선수연락처';

COMMENT ON COLUMN TEAM.PLAYER_INFO IS '특이사항';

COMMENT ON COLUMN TEAM.PLAYER_STATUS IS '상태';

COMMENT ON COLUMN TEAM.PLAYER_ADDRESS IS '선수주소';

COMMENT ON COLUMN TEAM.PLAYER_ADDRESS_DETAIL IS '선수주소상세';

COMMENT ON COLUMN TEAM.PLAYER_ZIPCODE IS '선수우편번호';

COMMENT ON COLUMN TEAM.PLAYER_IMAGE IS '이미지';

CREATE UNIQUE INDEX TEAM
	ON TEAM (
		PLAYER_NO ASC
	);

ALTER TABLE TEAM
	ADD
		CONSTRAINT TEAM
		PRIMARY KEY (
			PLAYER_NO
		);

/* 팀별공지사항 */
CREATE TABLE TEAM_NOTICE (
	TEAM_NOTICE_NO NUMBER NOT NULL, /* 팀별공지번호 */
	MY_BOARD_NO NUMBER, /* 보드번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	TEAM_NOTICE_TITLE VARCHAR2(100), /* 제목 */
	TEAM_NOTICE_CONTENT VARCHAR2(3000), /* 내용 */
	REGDATE DATE DEFAULT SYSDATE, /* 등록일 */
	VIEWS NUMBER DEFAULT 0, /* 조회수 */
	COMMENTS VARCHAR2(500), /* 댓글 */
	FSIZE LONG, /* 파일사이즈 */
	FILENAME VARCHAR2(100), /* 파일이름 */
	ORIGINNAME VARCHAR2(100), /* 오리지널이름 */
	GROUPNO NUMBER DEFAULT 0, /* 그룹번호 */
	SORTNO NUMBER DEFAULT 0, /* 댓글순서 */
	STEP NUMBER DEFAULT 0, /* 댓글여부 */
	STATUS VARCHAR2(10) DEFAULT Y NOT NULL, /* 공개상태 */
	CONTENTNO NUMBER /* 게시물번호 */
);

COMMENT ON TABLE TEAM_NOTICE IS '팀별공지사항';

COMMENT ON COLUMN TEAM_NOTICE.TEAM_NOTICE_NO IS '팀별공지번호';

COMMENT ON COLUMN TEAM_NOTICE.MY_BOARD_NO IS '보드번호';

COMMENT ON COLUMN TEAM_NOTICE.MEM_NO IS '사원번호';

COMMENT ON COLUMN TEAM_NOTICE.TEAM_NOTICE_TITLE IS '제목';

COMMENT ON COLUMN TEAM_NOTICE.TEAM_NOTICE_CONTENT IS '내용';

COMMENT ON COLUMN TEAM_NOTICE.REGDATE IS '등록일';

COMMENT ON COLUMN TEAM_NOTICE.VIEWS IS '조회수';

COMMENT ON COLUMN TEAM_NOTICE.COMMENTS IS '댓글';

COMMENT ON COLUMN TEAM_NOTICE.FSIZE IS '파일사이즈';

COMMENT ON COLUMN TEAM_NOTICE.FILENAME IS '파일이름';

COMMENT ON COLUMN TEAM_NOTICE.ORIGINNAME IS '오리지널이름';

COMMENT ON COLUMN TEAM_NOTICE.GROUPNO IS '그룹번호';

COMMENT ON COLUMN TEAM_NOTICE.SORTNO IS '댓글순서';

COMMENT ON COLUMN TEAM_NOTICE.STEP IS '댓글여부';

COMMENT ON COLUMN TEAM_NOTICE.STATUS IS '공개상태';

COMMENT ON COLUMN TEAM_NOTICE.CONTENTNO IS '게시물번호';

CREATE UNIQUE INDEX PK_TEAM_NOTICE
	ON TEAM_NOTICE (
		TEAM_NOTICE_NO ASC
	);

ALTER TABLE TEAM_NOTICE
	ADD
		CONSTRAINT PK_TEAM_NOTICE
		PRIMARY KEY (
			TEAM_NOTICE_NO
		);

/* 내보드 */
CREATE TABLE MY_BOARD (
	MY_BOARD_NO NUMBER NOT NULL, /* 보드번호 */
	M_BOARD_NO NUMBER NOT NULL, /* 게시판번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	STATUS VARCHAR2(10) DEFAULT Y /* 상태 */
);

COMMENT ON TABLE MY_BOARD IS '내보드';

COMMENT ON COLUMN MY_BOARD.MY_BOARD_NO IS '보드번호';

COMMENT ON COLUMN MY_BOARD.M_BOARD_NO IS '게시판번호';

COMMENT ON COLUMN MY_BOARD.MEM_NO IS '사원번호';

COMMENT ON COLUMN MY_BOARD.STATUS IS '상태';

CREATE UNIQUE INDEX PK_MY_BOARD
	ON MY_BOARD (
		MY_BOARD_NO ASC
	);

ALTER TABLE MY_BOARD
	ADD
		CONSTRAINT PK_MY_BOARD
		PRIMARY KEY (
			MY_BOARD_NO
		);

/* 팀별업무게시판 */
CREATE TABLE TEAM_WORK_BOARD (
	TEAM_BOARD_NO NUMBER NOT NULL, /* 팀별게시물번호 */
	MY_BOARD_NO NUMBER NOT NULL, /* 보드번호 */
	MEM_NO NUMBER, /* 사원번호 */
	TEAM_BOARD_TITLE VARCHAR2(100), /* 제목 */
	TEAM_BOARD_CONTENT VARCHAR2(3000), /* 내용 */
	REGDATE DATE DEFAULT SYSDATE NOT NULL, /* 등록일 */
	VIEWS NUMBER DEFAULT 0, /* 조회수 */
	COMMENTS VARCHAR2(500), /* 댓글 */
	FSIZE LONG, /* 파일사이즈 */
	FILENAME VARCHAR2(100), /* 파일이름 */
	ORIGIN_FILENAME VARCHAR2(100), /* 원본파일명 */
	GROUP_NO NUMBER DEFAULT 0, /* 그룹번호 */
	SORTNO NUMBER DEFAULT 0, /* 댓글순서 */
	STEP NUMBER DEFAULT 0, /* 댓글여부 */
	STATUS VARCHAR2(10) DEFAULT Y, /* 공개상태 */
	CONTENTNO NUMBER /* 게시물번호 */
);

COMMENT ON TABLE TEAM_WORK_BOARD IS '팀별업무게시판';

COMMENT ON COLUMN TEAM_WORK_BOARD.TEAM_BOARD_NO IS '팀별게시물번호';

COMMENT ON COLUMN TEAM_WORK_BOARD.MY_BOARD_NO IS '보드번호';

COMMENT ON COLUMN TEAM_WORK_BOARD.MEM_NO IS '사원번호';

COMMENT ON COLUMN TEAM_WORK_BOARD.TEAM_BOARD_TITLE IS '제목';

COMMENT ON COLUMN TEAM_WORK_BOARD.TEAM_BOARD_CONTENT IS '내용';

COMMENT ON COLUMN TEAM_WORK_BOARD.REGDATE IS '등록일';

COMMENT ON COLUMN TEAM_WORK_BOARD.VIEWS IS '조회수';

COMMENT ON COLUMN TEAM_WORK_BOARD.COMMENTS IS '댓글';

COMMENT ON COLUMN TEAM_WORK_BOARD.FSIZE IS '파일사이즈';

COMMENT ON COLUMN TEAM_WORK_BOARD.FILENAME IS '파일이름';

COMMENT ON COLUMN TEAM_WORK_BOARD.ORIGIN_FILENAME IS '원본파일명';

COMMENT ON COLUMN TEAM_WORK_BOARD.GROUP_NO IS '그룹번호';

COMMENT ON COLUMN TEAM_WORK_BOARD.SORTNO IS '댓글순서';

COMMENT ON COLUMN TEAM_WORK_BOARD.STEP IS '댓글여부';

COMMENT ON COLUMN TEAM_WORK_BOARD.STATUS IS '공개상태';

COMMENT ON COLUMN TEAM_WORK_BOARD.CONTENTNO IS '게시물번호';

CREATE UNIQUE INDEX PK_TEAM_WORK_BOARD
	ON TEAM_WORK_BOARD (
		TEAM_BOARD_NO ASC
	);

ALTER TABLE TEAM_WORK_BOARD
	ADD
		CONSTRAINT PK_TEAM_WORK_BOARD
		PRIMARY KEY (
			TEAM_BOARD_NO
		);

/* 게시판리스트 */
CREATE TABLE M_BOARD (
	M_BOARD_NO NUMBER NOT NULL, /* 보드번호 */
	MEM_NO NUMBER, /* 사원번호 */
	M_BOARD_NAME VARCHAR2(50) NOT NULL, /* 게시판이름 */
	MAIN_VIEW VARCHAR2(10) DEFAULT N /* 메인페이지활성화 */
);

COMMENT ON TABLE M_BOARD IS '게시판리스트';

COMMENT ON COLUMN M_BOARD.M_BOARD_NO IS '보드번호';

COMMENT ON COLUMN M_BOARD.MEM_NO IS '사원번호';

COMMENT ON COLUMN M_BOARD.M_BOARD_NAME IS '게시판이름';

COMMENT ON COLUMN M_BOARD.MAIN_VIEW IS '메인페이지활성화';

CREATE UNIQUE INDEX PK_M_BOARD
	ON M_BOARD (
		M_BOARD_NO ASC
	);

ALTER TABLE M_BOARD
	ADD
		CONSTRAINT PK_M_BOARD
		PRIMARY KEY (
			M_BOARD_NO
		);

/* ToDo리스트 */
CREATE TABLE TODOLIST (
	TODOLIST_NO NUMBER NOT NULL, /* 리스트번호 */
	TEAM_BOARD_NO NUMBER NOT NULL, /* 팀별게시물번호 */
	START_REGDATE DATE NOT NULL, /* 시작날짜 */
	DONE_REGDATE DATE NOT NULL /* 종료날짜 */
);

COMMENT ON TABLE TODOLIST IS 'ToDo리스트';

COMMENT ON COLUMN TODOLIST.TODOLIST_NO IS '리스트번호';

COMMENT ON COLUMN TODOLIST.TEAM_BOARD_NO IS '팀별게시물번호';

COMMENT ON COLUMN TODOLIST.START_REGDATE IS '시작날짜';

COMMENT ON COLUMN TODOLIST.DONE_REGDATE IS '종료날짜';

CREATE UNIQUE INDEX PK_TODOLIST
	ON TODOLIST (
		TODOLIST_NO ASC
	);

ALTER TABLE TODOLIST
	ADD
		CONSTRAINT PK_TODOLIST
		PRIMARY KEY (
			TODOLIST_NO
		);

/* 채팅 */
CREATE TABLE CHAT_ROOM (
	 CHAT_ROOM_NO NUMBER NOT NULL, /* 채팅방번호 */
	REGDATE DATE DEFAULT SYSDATE /* 채팅방 생성일 */
);

COMMENT ON TABLE CHAT_ROOM IS '채팅';

COMMENT ON COLUMN CHAT_ROOM. CHAT_ROOM_NO IS '채팅방번호';

COMMENT ON COLUMN CHAT_ROOM.REGDATE IS '채팅방 생성일';

CREATE UNIQUE INDEX PK_CHAT_ROOM
	ON CHAT_ROOM (
		 CHAT_ROOM_NO ASC
	);

ALTER TABLE CHAT_ROOM
	ADD
		CONSTRAINT PK_CHAT_ROOM
		PRIMARY KEY (
			 CHAT_ROOM_NO
		);

/* 채팅상세 */
CREATE TABLE CHAT_MESSAGE (
	CHAT_MESSAGE_NO NUMBER NOT NULL, /* 채팅상세번호 */
	CHAT_MEMBER_NO NUMBER, /* 멤버 시퀀스 */
	CHAT_MESSAGE VARCHAR2(3000) NOT NULL, /* 채팅내용 */
	REGDATE DATE DEFAULT SYSDATE NOT NULL, /* 채팅 발송 시간 */
	READ_CHAT VARCHAR2(10) DEFAULT N /* 채팅 읽음 여부 */
);

COMMENT ON TABLE CHAT_MESSAGE IS '채팅상세';

COMMENT ON COLUMN CHAT_MESSAGE.CHAT_MESSAGE_NO IS '채팅상세번호';

COMMENT ON COLUMN CHAT_MESSAGE.CHAT_MEMBER_NO IS '멤버 시퀀스';

COMMENT ON COLUMN CHAT_MESSAGE.CHAT_MESSAGE IS '채팅내용';

COMMENT ON COLUMN CHAT_MESSAGE.REGDATE IS '채팅 발송 시간';

COMMENT ON COLUMN CHAT_MESSAGE.READ_CHAT IS '채팅 읽음 여부';

CREATE UNIQUE INDEX PK_CHAT_MESSAGE
	ON CHAT_MESSAGE (
		CHAT_MESSAGE_NO ASC
	);

ALTER TABLE CHAT_MESSAGE
	ADD
		CONSTRAINT PK_CHAT_MESSAGE
		PRIMARY KEY (
			CHAT_MESSAGE_NO
		);

/* 웹하드 */
CREATE TABLE WEB_HARD (
	WEB_HARD_NO NUMBER NOT NULL, /* 웹하드번호 */
	MY_BOARD_NO NUMBER NOT NULL, /* 보드번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	HARD_TITLE VARCHAR2(100) NOT NULL, /* 제목 */
	HARD_CONTENT VARCHAR2(3000) NOT NULL, /* 내용 */
	REGDATE DATE DEFAULT SYSDATE, /* 등록일 */
	STATUS VARCHAR2(10) NOT NULL, /* 상태 */
	VIEWS NUMBER /* 조회수 */
);

COMMENT ON TABLE WEB_HARD IS '웹하드';

COMMENT ON COLUMN WEB_HARD.WEB_HARD_NO IS '웹하드번호';

COMMENT ON COLUMN WEB_HARD.MY_BOARD_NO IS '보드번호';

COMMENT ON COLUMN WEB_HARD.MEM_NO IS '사원번호';

COMMENT ON COLUMN WEB_HARD.HARD_TITLE IS '제목';

COMMENT ON COLUMN WEB_HARD.HARD_CONTENT IS '내용';

COMMENT ON COLUMN WEB_HARD.REGDATE IS '등록일';

COMMENT ON COLUMN WEB_HARD.STATUS IS '상태';

COMMENT ON COLUMN WEB_HARD.VIEWS IS '조회수';

CREATE UNIQUE INDEX PK_WEB_HARD
	ON WEB_HARD (
		WEB_HARD_NO ASC
	);

ALTER TABLE WEB_HARD
	ADD
		CONSTRAINT PK_WEB_HARD
		PRIMARY KEY (
			WEB_HARD_NO
		);

/* 스케줄 */
CREATE TABLE SCHEDULE (
	SCHEDULE_NO NUMBER NOT NULL, /* 스케줄번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	MY_BOARD_NO NUMBER NOT NULL, /* 보드번호 */
	SCHEDULE_START DATE NOT NULL, /* 시작일 */
	SCHEDULE_END DATE NOT NULL, /* 종료일 */
	SCHEDULE_TITLE VARCHAR2(100) NOT NULL, /* 제목 */
	SCHEDULE_CONTENT VARCHAR2(3000) NOT NULL /* 내용 */
);

COMMENT ON TABLE SCHEDULE IS '스케줄';

COMMENT ON COLUMN SCHEDULE.SCHEDULE_NO IS '스케줄번호';

COMMENT ON COLUMN SCHEDULE.MEM_NO IS '사원번호';

COMMENT ON COLUMN SCHEDULE.MY_BOARD_NO IS '보드번호';

COMMENT ON COLUMN SCHEDULE.SCHEDULE_START IS '시작일';

COMMENT ON COLUMN SCHEDULE.SCHEDULE_END IS '종료일';

COMMENT ON COLUMN SCHEDULE.SCHEDULE_TITLE IS '제목';

COMMENT ON COLUMN SCHEDULE.SCHEDULE_CONTENT IS '내용';

CREATE UNIQUE INDEX PK_SCHEDULE
	ON SCHEDULE (
		SCHEDULE_NO ASC
	);

ALTER TABLE SCHEDULE
	ADD
		CONSTRAINT PK_SCHEDULE
		PRIMARY KEY (
			SCHEDULE_NO
		);

/* 경기기록 */
CREATE TABLE RECODE (
	RECODE_NO NUMBER NOT NULL, /* 기록번호 */
	PLAY_DATE DATE DEFAULT SYSDATE, /* 경기날짜 */
	GROUND VARCHAR2(100) NOT NULL, /* 경기장 */
	WIN VARCHAR2(10) NOT NULL, /* 승무패 */
	FIRST_PTICHER VARCHAR2(100) NOT NULL, /* 선발투수 */
	OTHER_TEAM VARCHAR2(100) NOT NULL /* 상대팀명 */
);

COMMENT ON TABLE RECODE IS '경기기록';

COMMENT ON COLUMN RECODE.RECODE_NO IS '기록번호';

COMMENT ON COLUMN RECODE.PLAY_DATE IS '경기날짜';

COMMENT ON COLUMN RECODE.GROUND IS '경기장';

COMMENT ON COLUMN RECODE.WIN IS '승무패';

COMMENT ON COLUMN RECODE.FIRST_PTICHER IS '선발투수';

COMMENT ON COLUMN RECODE.OTHER_TEAM IS '상대팀명';

CREATE UNIQUE INDEX PK_RECODE
	ON RECODE (
		RECODE_NO ASC
	);

ALTER TABLE RECODE
	ADD
		CONSTRAINT PK_RECODE
		PRIMARY KEY (
			RECODE_NO
		);

/* 기록상세 */
CREATE TABLE RECORD_DETAIL (
	RECODE_DETAIL_NO NUMBER NOT NULL, /* 기록상세번호 */
	RECODE_NO NUMBER NOT NULL, /* 기록번호 */
	STAFF_NO NUMBER, /* 스태프번호 */
	REGDATE DATE /* 등록일 */
);

COMMENT ON TABLE RECORD_DETAIL IS '기록상세';

COMMENT ON COLUMN RECORD_DETAIL.RECODE_DETAIL_NO IS '기록상세번호';

COMMENT ON COLUMN RECORD_DETAIL.RECODE_NO IS '기록번호';

COMMENT ON COLUMN RECORD_DETAIL.STAFF_NO IS '스태프번호';

COMMENT ON COLUMN RECORD_DETAIL.REGDATE IS '등록일';

CREATE UNIQUE INDEX PK_RECORD_DETAIL
	ON RECORD_DETAIL (
		RECODE_DETAIL_NO ASC
	);

ALTER TABLE RECORD_DETAIL
	ADD
		CONSTRAINT PK_RECORD_DETAIL
		PRIMARY KEY (
			RECODE_DETAIL_NO
		);

/* 회차정보 */
CREATE TABLE INNING (
	INNING_NO NUMBER NOT NULL, /* 회차정보번호 */
	RECODE_DETAIL_NO NUMBER NOT NULL, /* 기록상세번호 */
	INNING VARCHAR2(10) NOT NULL, /* 회차 */
	H NUMBER, /* 안타 */
	ERRORS NUMBER, /* 실책 */
	SO NUMBER, /* 삼진 */
	B2 NUMBER, /* 2루타 */
	B3 NUMBER, /* 3루타 */
	HR NUMBER, /* 홈런 */
	HRI NUMBER, /* 타점 */
	FOURBALL NUMBER, /* 볼넷 */
	LEFT_ON_BASE NUMBER, /* 잔루 */
	AB NUMBER, /* 타석 */
	STEAL NUMBER, /* 도루 */
	R NUMBER, /* 득점 */
	TEAM_INFO VARCHAR2(100) NOT NULL /* 팀정보 */
);

COMMENT ON TABLE INNING IS '회차정보';

COMMENT ON COLUMN INNING.INNING_NO IS '회차정보번호';

COMMENT ON COLUMN INNING.RECODE_DETAIL_NO IS '기록상세번호';

COMMENT ON COLUMN INNING.INNING IS '회차';

COMMENT ON COLUMN INNING.H IS '안타';

COMMENT ON COLUMN INNING.ERRORS IS '실책';

COMMENT ON COLUMN INNING.SO IS '삼진';

COMMENT ON COLUMN INNING.B2 IS '2루타';

COMMENT ON COLUMN INNING.B3 IS '3루타';

COMMENT ON COLUMN INNING.HR IS '홈런';

COMMENT ON COLUMN INNING.HRI IS '타점';

COMMENT ON COLUMN INNING.FOURBALL IS '볼넷';

COMMENT ON COLUMN INNING.LEFT_ON_BASE IS '잔루';

COMMENT ON COLUMN INNING.AB IS '타석';

COMMENT ON COLUMN INNING.STEAL IS '도루';

COMMENT ON COLUMN INNING.R IS '득점';

COMMENT ON COLUMN INNING.TEAM_INFO IS '팀정보';

CREATE UNIQUE INDEX PK_INNING
	ON INNING (
		INNING_NO ASC
	);

ALTER TABLE INNING
	ADD
		CONSTRAINT PK_INNING
		PRIMARY KEY (
			INNING_NO
		);

/* 경기별 투수기록 */
CREATE TABLE PITCHER (
	PITCHER_NO NUMBER NOT NULL, /* 경기별 투수기록 번호 */
	RECODE_NO NUMBER NOT NULL, /* 기록번호 */
	PLAYER_NO NUMBER NOT NULL, /* 선수번호 */
	STAFF_NO NUMBER, /* 스태프번호 */
	BB NUMBER DEFAULT 0, /* 사구 */
	SO NUMBER DEFAULT 0, /* 삼진 */
	IP NUMBER, /* 투구이닝 */
	HA NUMBER DEFAULT 0, /* 피안타 */
	RC NUMBER DEFAULT 0, /* 실점 */
	ER NUMBER, /* 자책점 */
	HR NUMBER DEFAULT 0, /* 피홈런 */
	ERA NUMBER, /* 평균자책점 */
	REGDATE DATE /* 등록일 */
);

COMMENT ON TABLE PITCHER IS '경기별 투수기록';

COMMENT ON COLUMN PITCHER.PITCHER_NO IS '경기별 투수기록 번호';

COMMENT ON COLUMN PITCHER.RECODE_NO IS '기록번호';

COMMENT ON COLUMN PITCHER.PLAYER_NO IS '선수번호';

COMMENT ON COLUMN PITCHER.STAFF_NO IS '스태프번호';

COMMENT ON COLUMN PITCHER.BB IS '사구';

COMMENT ON COLUMN PITCHER.SO IS '삼진';

COMMENT ON COLUMN PITCHER.IP IS '투구이닝';

COMMENT ON COLUMN PITCHER.HA IS '피안타';

COMMENT ON COLUMN PITCHER.RC IS '실점';

COMMENT ON COLUMN PITCHER.ER IS '자책점';

COMMENT ON COLUMN PITCHER.HR IS '피홈런';

COMMENT ON COLUMN PITCHER.ERA IS '평균자책점';

COMMENT ON COLUMN PITCHER.REGDATE IS '등록일';

CREATE UNIQUE INDEX PLAYER_RECORD
	ON PITCHER (
		PITCHER_NO ASC
	);

ALTER TABLE PITCHER
	ADD
		CONSTRAINT PLAYER_RECORD
		PRIMARY KEY (
			PITCHER_NO
		);

/* 경기별 타자기록 */
CREATE TABLE HITTER (
	HITTER_NO NUMBER NOT NULL, /* 경기별 타자기록 번호 */
	RECODE_NO NUMBER NOT NULL, /* 기록번호 */
	PLAYER_NO NUMBER NOT NULL, /* 선수번호 */
	STAFF_NO NUMBER, /* 스태프번호 */
	AB NUMBER, /* 타수 */
	RS NUMBER, /* 득점 */
	H NUMBER, /* 안타 */
	RBI NUMBER, /* 타점 */
	BB NUMBER, /* 사구 */
	SO NUMBER, /* 삼진 */
	BA NUMBER, /* 타율 */
	REGDATE DATE /* 등록일 */
);

COMMENT ON TABLE HITTER IS '경기별 타자기록';

COMMENT ON COLUMN HITTER.HITTER_NO IS '경기별 타자기록 번호';

COMMENT ON COLUMN HITTER.RECODE_NO IS '기록번호';

COMMENT ON COLUMN HITTER.PLAYER_NO IS '선수번호';

COMMENT ON COLUMN HITTER.STAFF_NO IS '스태프번호';

COMMENT ON COLUMN HITTER.AB IS '타수';

COMMENT ON COLUMN HITTER.RS IS '득점';

COMMENT ON COLUMN HITTER.H IS '안타';

COMMENT ON COLUMN HITTER.RBI IS '타점';

COMMENT ON COLUMN HITTER.BB IS '사구';

COMMENT ON COLUMN HITTER.SO IS '삼진';

COMMENT ON COLUMN HITTER.BA IS '타율';

COMMENT ON COLUMN HITTER.REGDATE IS '등록일';

CREATE UNIQUE INDEX PK_HITTER
	ON HITTER (
		HITTER_NO ASC
	);

ALTER TABLE HITTER
	ADD
		CONSTRAINT PK_HITTER
		PRIMARY KEY (
			HITTER_NO
		);

/* 결재 */
CREATE TABLE SIGN (
	DOC_NO NUMBER NOT NULL, /* 문서번호 */
	MY_BOARD_NO NUMBER NOT NULL, /* 보드번호 */
	DEPT_NO NUMBER NOT NULL, /* 부서번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	DOC_TITLE VARCHAR2(100) NOT NULL, /* 제목 */
	DOC_CONTENT VARCHAR2(3000) NOT NULL, /* 내용 */
	REGDATE DATE DEFAULT SYSDATE, /* 기안일자 */
	ACCEPT_DATE DATE, /* 승인일 */
	STATUS VARCHAR2(10) NOT NULL, /* 처리상태 */
	FILE_STATUS VARCHAR2(10), /* 파일첨부여부 */
	DEL_STATUS VARCHAR2(10) DEFAULT N /* 삭제여부 */
);

COMMENT ON TABLE SIGN IS '결재';

COMMENT ON COLUMN SIGN.DOC_NO IS '문서번호';

COMMENT ON COLUMN SIGN.MY_BOARD_NO IS '보드번호';

COMMENT ON COLUMN SIGN.DEPT_NO IS '부서번호';

COMMENT ON COLUMN SIGN.MEM_NO IS '사원번호';

COMMENT ON COLUMN SIGN.DOC_TITLE IS '제목';

COMMENT ON COLUMN SIGN.DOC_CONTENT IS '내용';

COMMENT ON COLUMN SIGN.REGDATE IS '기안일자';

COMMENT ON COLUMN SIGN.ACCEPT_DATE IS '승인일';

COMMENT ON COLUMN SIGN.STATUS IS '처리상태';

COMMENT ON COLUMN SIGN.FILE_STATUS IS '파일첨부여부';

COMMENT ON COLUMN SIGN.DEL_STATUS IS '삭제여부';

CREATE UNIQUE INDEX PK_SIGN
	ON SIGN (
		DOC_NO ASC
	);

ALTER TABLE SIGN
	ADD
		CONSTRAINT PK_SIGN
		PRIMARY KEY (
			DOC_NO
		);

/* 결재라인 */
CREATE TABLE SIGN_LINE (
	SIGN_LINE_NO NUMBER NOT NULL, /* 결재라인번호 */
	DOC_NO NUMBER NOT NULL, /* 문서번호 */
	MEM_NO NUMBER NOT NULL, /* 사원번호 */
	SIGN_LINE NUMBER NOT NULL /* 결재순서 */
);

COMMENT ON TABLE SIGN_LINE IS '결재라인';

COMMENT ON COLUMN SIGN_LINE.SIGN_LINE_NO IS '결재라인번호';

COMMENT ON COLUMN SIGN_LINE.DOC_NO IS '문서번호';

COMMENT ON COLUMN SIGN_LINE.MEM_NO IS '사원번호';

COMMENT ON COLUMN SIGN_LINE.SIGN_LINE IS '결재순서';

CREATE UNIQUE INDEX PK_SIGN_LINE
	ON SIGN_LINE (
		SIGN_LINE_NO ASC
	);

ALTER TABLE SIGN_LINE
	ADD
		CONSTRAINT PK_SIGN_LINE
		PRIMARY KEY (
			SIGN_LINE_NO
		);

/* 결재파일 */
CREATE TABLE SIGN_FILE (
	FILE_NO NUMBER NOT NULL, /* 파일번호 */
	DOC_NO NUMBER NOT NULL, /* 문서번호 */
	FILENAME VARCHAR2(100) NOT NULL, /* 파일명 */
	ORIGIN_FILENAME VARCHAR2(100) NOT NULL, /* 원본파일명 */
	FSIZE LONG NOT NULL /* 파일사이즈 */
);

COMMENT ON TABLE SIGN_FILE IS '결재파일';

COMMENT ON COLUMN SIGN_FILE.FILE_NO IS '파일번호';

COMMENT ON COLUMN SIGN_FILE.DOC_NO IS '문서번호';

COMMENT ON COLUMN SIGN_FILE.FILENAME IS '파일명';

COMMENT ON COLUMN SIGN_FILE.ORIGIN_FILENAME IS '원본파일명';

COMMENT ON COLUMN SIGN_FILE.FSIZE IS '파일사이즈';

CREATE UNIQUE INDEX PK_SIGN_FILE
	ON SIGN_FILE (
		FILE_NO ASC
	);

ALTER TABLE SIGN_FILE
	ADD
		CONSTRAINT PK_SIGN_FILE
		PRIMARY KEY (
			FILE_NO
		);

/* 웹하드파일 */
CREATE TABLE WEB_HARD_DETAIL (
	FILE_NO NUMBER NOT NULL, /* 파일번호 */
	WEB_HARD_NO NUMBER, /* 웹하드번호 */
	MY_BOARD_NO NUMBER, /* 보드번호 */
	DOWN_COUNT NUMBER, /* 다운카운트 */
	FSIZE LONG, /* 파일사이즈 */
	ORIGIN_FILENAME VARCHAR2(100), /* 오리지널이름 */
	FILENAME VARCHAR2(100) /* 파일이름 */
);

COMMENT ON TABLE WEB_HARD_DETAIL IS '웹하드파일';

COMMENT ON COLUMN WEB_HARD_DETAIL.FILE_NO IS '파일번호';

COMMENT ON COLUMN WEB_HARD_DETAIL.WEB_HARD_NO IS '웹하드번호';

COMMENT ON COLUMN WEB_HARD_DETAIL.MY_BOARD_NO IS '보드번호';

COMMENT ON COLUMN WEB_HARD_DETAIL.DOWN_COUNT IS '다운카운트';

COMMENT ON COLUMN WEB_HARD_DETAIL.FSIZE IS '파일사이즈';

COMMENT ON COLUMN WEB_HARD_DETAIL.ORIGIN_FILENAME IS '오리지널이름';

COMMENT ON COLUMN WEB_HARD_DETAIL.FILENAME IS '파일이름';

CREATE UNIQUE INDEX PK_WEB_HARD_DETAIL
	ON WEB_HARD_DETAIL (
		FILE_NO ASC
	);

ALTER TABLE WEB_HARD_DETAIL
	ADD
		CONSTRAINT PK_WEB_HARD_DETAIL
		PRIMARY KEY (
			FILE_NO
		);

/* ToDo리스트 상세 */
CREATE TABLE TODOLIST_DETAIL (
	TODO_DETAIL_NO NUMBER NOT NULL, /* 리스트 상세 번호 */
	TODOLIST_NO NUMBER, /* 리스트번호 */
	TODO_CONTENT VARCHAR2(3000), /* 내용 */
	REGDATE DATE DEFAULT SYSDATE, /* 등록날짜 */
	STATUS VARCHAR2(10) DEFAULT Y, /* 상태 */
	MEM_NO NUMBER /* 사원번호(담당자) */
);

COMMENT ON TABLE TODOLIST_DETAIL IS 'ToDo리스트 상세';

COMMENT ON COLUMN TODOLIST_DETAIL.TODO_DETAIL_NO IS '리스트 상세 번호';

COMMENT ON COLUMN TODOLIST_DETAIL.TODOLIST_NO IS '리스트번호';

COMMENT ON COLUMN TODOLIST_DETAIL.TODO_CONTENT IS '내용';

COMMENT ON COLUMN TODOLIST_DETAIL.REGDATE IS '등록날짜';

COMMENT ON COLUMN TODOLIST_DETAIL.STATUS IS '상태';

COMMENT ON COLUMN TODOLIST_DETAIL.MEM_NO IS '사원번호(담당자)';

CREATE UNIQUE INDEX PK_TODOLIST_DETAIL
	ON TODOLIST_DETAIL (
		TODO_DETAIL_NO ASC
	);

ALTER TABLE TODOLIST_DETAIL
	ADD
		CONSTRAINT PK_TODOLIST_DETAIL
		PRIMARY KEY (
			TODO_DETAIL_NO
		);

/* 공지사항파일 */
CREATE TABLE NOTICEFILE (
	NOTICE_FILE_NO NUMBER NOT NULL, /* 파일번호 */
	NOTICE_NO NUMBER, /* 공지사항번호 */
	FILE_NAME VARCHAR2(100), /* 파일이름 */
	FILE_SIZE LONG, /* 파일사이즈 */
	DOWN_COUNT NUMBER DEFAULT 0, /* 다운카운트 */
	ORIGIN_FILENAME VARCHAR2(100) /* 오리지널이름 */
);

COMMENT ON TABLE NOTICEFILE IS '공지사항파일';

COMMENT ON COLUMN NOTICEFILE.NOTICE_FILE_NO IS '파일번호';

COMMENT ON COLUMN NOTICEFILE.NOTICE_NO IS '공지사항번호';

COMMENT ON COLUMN NOTICEFILE.FILE_NAME IS '파일이름';

COMMENT ON COLUMN NOTICEFILE.FILE_SIZE IS '파일사이즈';

COMMENT ON COLUMN NOTICEFILE.DOWN_COUNT IS '다운카운트';

COMMENT ON COLUMN NOTICEFILE.ORIGIN_FILENAME IS '오리지널이름';

CREATE UNIQUE INDEX PK_NOTICEFILE
	ON NOTICEFILE (
		NOTICE_FILE_NO ASC
	);

ALTER TABLE NOTICEFILE
	ADD
		CONSTRAINT PK_NOTICEFILE
		PRIMARY KEY (
			NOTICE_FILE_NO
		);

/* 채팅 멤버 */
CREATE TABLE CHAT_MEMBER (
	CHAT_MEMBER_NO NUMBER NOT NULL, /* 멤버 시퀀스 */
	MEM_NO2 NUMBER, /* 사원번호 */
	 CHAT_ROOM_NO NUMBER /* 채팅방번호 */
);

COMMENT ON TABLE CHAT_MEMBER IS '채팅 멤버';

COMMENT ON COLUMN CHAT_MEMBER.CHAT_MEMBER_NO IS '멤버 시퀀스';

COMMENT ON COLUMN CHAT_MEMBER.MEM_NO2 IS '사원번호';

COMMENT ON COLUMN CHAT_MEMBER. CHAT_ROOM_NO IS '채팅방번호';

CREATE UNIQUE INDEX PK_CHAT_MEMBER
	ON CHAT_MEMBER (
		CHAT_MEMBER_NO ASC
	);

ALTER TABLE CHAT_MEMBER
	ADD
		CONSTRAINT PK_CHAT_MEMBER
		PRIMARY KEY (
			CHAT_MEMBER_NO
		);

/* 자유게시판파일 */
CREATE TABLE BOARDFILE (
	BOARD_FILE_NO NUMBER NOT NULL, /* 파일번호 */
	BOARD_NO NUMBER, /* 자유게시판번호 */
	FILE_NAME VARCHAR2(100), /* 파일이름 */
	FILE_SIZE LONG, /* 파일사이즈 */
	DOWN_COUNT NUMBER DEFAULT 0, /* 다운카운트 */
	ORIGIN_FILENAME VARCHAR2(100) /* 오리지널이름 */
);

COMMENT ON TABLE BOARDFILE IS '자유게시판파일';

COMMENT ON COLUMN BOARDFILE.BOARD_FILE_NO IS '파일번호';

COMMENT ON COLUMN BOARDFILE.BOARD_NO IS '자유게시판번호';

COMMENT ON COLUMN BOARDFILE.FILE_NAME IS '파일이름';

COMMENT ON COLUMN BOARDFILE.FILE_SIZE IS '파일사이즈';

COMMENT ON COLUMN BOARDFILE.DOWN_COUNT IS '다운카운트';

COMMENT ON COLUMN BOARDFILE.ORIGIN_FILENAME IS '오리지널이름';

CREATE UNIQUE INDEX PK_BOARDFILE
	ON BOARDFILE (
		BOARD_FILE_NO ASC
	);

ALTER TABLE BOARDFILE
	ADD
		CONSTRAINT PK_BOARDFILE
		PRIMARY KEY (
			BOARD_FILE_NO
		);

/* 보낸메세지 */
CREATE TABLE MESSAGESEND (
	MESSAGESENDNO NUMBER NOT NULL, /* 보낸메세지번호 */
	MEM_NO NUMBER NOT NULL, /* 발신자사원번호 */
	SENDTIME DATE DEFAULT SYSDATE NOT NULL, /* 메세지발신시간 */
	CONTENT VARCHAR2(3000) /* 메세지내용 */
);

COMMENT ON TABLE MESSAGESEND IS '보낸메세지';

COMMENT ON COLUMN MESSAGESEND.MESSAGESENDNO IS '보낸메세지번호';

COMMENT ON COLUMN MESSAGESEND.MEM_NO IS '발신자사원번호';

COMMENT ON COLUMN MESSAGESEND.SENDTIME IS '메세지발신시간';

COMMENT ON COLUMN MESSAGESEND.CONTENT IS '메세지내용';

CREATE UNIQUE INDEX PK_MESSAGESEND
	ON MESSAGESEND (
		MESSAGESENDNO ASC
	);

ALTER TABLE MESSAGESEND
	ADD
		CONSTRAINT PK_MESSAGESEND
		PRIMARY KEY (
			MESSAGESENDNO
		);

/* 받은메세지 */
CREATE TABLE MESSAGERECEIVE (
	MESSAGERECEIVENO NUMBER NOT NULL, /* 받은메세지번호 */
	RECEIVEUSERNO NUMBER NOT NULL, /* 수신자사원번호 */
	MESSAGESENDNO NUMBER NOT NULL, /* 보낸메세지번호 */
	RECEIVETIME DATE DEFAULT SYSDATE NOT NULL /* 메세지수신시간 */
);

COMMENT ON TABLE MESSAGERECEIVE IS '받은메세지';

COMMENT ON COLUMN MESSAGERECEIVE.MESSAGERECEIVENO IS '받은메세지번호';

COMMENT ON COLUMN MESSAGERECEIVE.RECEIVEUSERNO IS '수신자사원번호';

COMMENT ON COLUMN MESSAGERECEIVE.MESSAGESENDNO IS '보낸메세지번호';

COMMENT ON COLUMN MESSAGERECEIVE.RECEIVETIME IS '메세지수신시간';

CREATE UNIQUE INDEX PK_MESSAGERECEIVE
	ON MESSAGERECEIVE (
		MESSAGERECEIVENO ASC
	);

ALTER TABLE MESSAGERECEIVE
	ADD
		CONSTRAINT PK_MESSAGERECEIVE
		PRIMARY KEY (
			MESSAGERECEIVENO
		);

/* ToDo리스트2 */
CREATE TABLE TODOLIST2 (
	TODOLIST_NO NUMBER NOT NULL, /* 리스트번호 */
	TEAM_BOARD_NO NUMBER NOT NULL, /* 팀별게시물번호 */
	START_REGDATE DATE NOT NULL, /* 시작날짜 */
	DONE_REGDATE DATE NOT NULL /* 종료날짜 */
);

COMMENT ON TABLE TODOLIST2 IS 'ToDo리스트2';

COMMENT ON COLUMN TODOLIST2.TODOLIST_NO IS '리스트번호';

COMMENT ON COLUMN TODOLIST2.TEAM_BOARD_NO IS '팀별게시물번호';

COMMENT ON COLUMN TODOLIST2.START_REGDATE IS '시작날짜';

COMMENT ON COLUMN TODOLIST2.DONE_REGDATE IS '종료날짜';

CREATE UNIQUE INDEX PK_TODOLIST2
	ON TODOLIST2 (
		TODOLIST_NO ASC
	);

ALTER TABLE TODOLIST2
	ADD
		CONSTRAINT PK_TODOLIST2
		PRIMARY KEY (
			TODOLIST_NO
		);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_DEPT_TO_MEMBER
		FOREIGN KEY (
			DEPT_NO
		)
		REFERENCES DEPT (
			DEPT_NO
		);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_POSITION_TO_MEMBER
		FOREIGN KEY (
			POSITION_NO
		)
		REFERENCES POSITION (
			POSITION_NO
		);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT FK_MEMBER_TO_NOTICE
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE ATTENDANCE
	ADD
		CONSTRAINT FK_MEMBER_TO_ATTENDANCE
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_BOARD
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_STAFF_TO_BOARD
		FOREIGN KEY (
			STAFF_NO
		)
		REFERENCES STAFF (
			STAFF_NO
		);

ALTER TABLE STAFF
	ADD
		CONSTRAINT FK_DEPT_TO_STAFF
		FOREIGN KEY (
			DEPT_NO
		)
		REFERENCES DEPT (
			DEPT_NO
		);

ALTER TABLE TEAM
	ADD
		CONSTRAINT FK_B_POSITION_TO_TEAM
		FOREIGN KEY (
			POSITION_NO
		)
		REFERENCES B_POSITION (
			B_POSITION_NO
		);

ALTER TABLE TEAM
	ADD
		CONSTRAINT FK_DEPT_TO_TEAM
		FOREIGN KEY (
			DEPT_NO
		)
		REFERENCES DEPT (
			DEPT_NO
		);

ALTER TABLE TEAM_NOTICE
	ADD
		CONSTRAINT FK_MEMBER_TO_TEAM_NOTICE
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE TEAM_NOTICE
	ADD
		CONSTRAINT FK_MY_BOARD_TO_TEAM_NOTICE
		FOREIGN KEY (
			MY_BOARD_NO
		)
		REFERENCES MY_BOARD (
			MY_BOARD_NO
		);

ALTER TABLE MY_BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_MY_BOARD
		FOREIGN KEY (
			M_BOARD_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE MY_BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_MY_BOARD2
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE TEAM_WORK_BOARD
	ADD
		CONSTRAINT FK_MY_BOARD_TO_TEAM_WORK_BOARD
		FOREIGN KEY (
			MY_BOARD_NO
		)
		REFERENCES MY_BOARD (
			MY_BOARD_NO
		);

ALTER TABLE TEAM_WORK_BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_TEAM_WORK_BOARD
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE M_BOARD
	ADD
		CONSTRAINT FK_MY_BOARD_TO_M_BOARD
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MY_BOARD (
			MY_BOARD_NO
		);

ALTER TABLE TODOLIST
	ADD
		CONSTRAINT FK_TEAM_WORK_BOARD_TO_TODOLIST
		FOREIGN KEY (
			TEAM_BOARD_NO
		)
		REFERENCES TEAM_WORK_BOARD (
			TEAM_BOARD_NO
		);

ALTER TABLE CHAT_MESSAGE
	ADD
		CONSTRAINT FK_CHAT_MEMBER_TO_CHAT_MESSAGE
		FOREIGN KEY (
			CHAT_MEMBER_NO
		)
		REFERENCES CHAT_MEMBER (
			CHAT_MEMBER_NO
		);

ALTER TABLE WEB_HARD
	ADD
		CONSTRAINT FK_MY_BOARD_TO_WEB_HARD
		FOREIGN KEY (
			MY_BOARD_NO
		)
		REFERENCES MY_BOARD (
			MY_BOARD_NO
		);

ALTER TABLE WEB_HARD
	ADD
		CONSTRAINT FK_MEMBER_TO_WEB_HARD
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE SCHEDULE
	ADD
		CONSTRAINT FK_MEMBER_TO_SCHEDULE
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE SCHEDULE
	ADD
		CONSTRAINT FK_MY_BOARD_TO_SCHEDULE
		FOREIGN KEY (
			MY_BOARD_NO
		)
		REFERENCES MY_BOARD (
			MY_BOARD_NO
		);

ALTER TABLE RECORD_DETAIL
	ADD
		CONSTRAINT FK_RECODE_TO_RECORD_DETAIL
		FOREIGN KEY (
			RECODE_NO
		)
		REFERENCES RECODE (
			RECODE_NO
		);

ALTER TABLE RECORD_DETAIL
	ADD
		CONSTRAINT FK_STAFF_TO_RECORD_DETAIL
		FOREIGN KEY (
			STAFF_NO
		)
		REFERENCES STAFF (
			STAFF_NO
		);

ALTER TABLE INNING
	ADD
		CONSTRAINT FK_RECORD_DETAIL_TO_INNING
		FOREIGN KEY (
			RECODE_DETAIL_NO
		)
		REFERENCES RECORD_DETAIL (
			RECODE_DETAIL_NO
		);

ALTER TABLE PITCHER
	ADD
		CONSTRAINT FK_RECODE_TO_PITCHER
		FOREIGN KEY (
			RECODE_NO
		)
		REFERENCES RECODE (
			RECODE_NO
		);

ALTER TABLE PITCHER
	ADD
		CONSTRAINT FK_TEAM_TO_PITCHER
		FOREIGN KEY (
			PLAYER_NO
		)
		REFERENCES TEAM (
			PLAYER_NO
		);

ALTER TABLE PITCHER
	ADD
		CONSTRAINT FK_STAFF_TO_PITCHER
		FOREIGN KEY (
			STAFF_NO
		)
		REFERENCES STAFF (
			STAFF_NO
		);

ALTER TABLE HITTER
	ADD
		CONSTRAINT FK_RECODE_TO_HITTER
		FOREIGN KEY (
			RECODE_NO
		)
		REFERENCES RECODE (
			RECODE_NO
		);

ALTER TABLE HITTER
	ADD
		CONSTRAINT FK_TEAM_TO_HITTER
		FOREIGN KEY (
			PLAYER_NO
		)
		REFERENCES TEAM (
			PLAYER_NO
		);

ALTER TABLE HITTER
	ADD
		CONSTRAINT FK_STAFF_TO_HITTER
		FOREIGN KEY (
			STAFF_NO
		)
		REFERENCES STAFF (
			STAFF_NO
		);

ALTER TABLE SIGN
	ADD
		CONSTRAINT FK_MY_BOARD_TO_SIGN
		FOREIGN KEY (
			MY_BOARD_NO
		)
		REFERENCES MY_BOARD (
			MY_BOARD_NO
		);

ALTER TABLE SIGN
	ADD
		CONSTRAINT FK_DEPT_TO_SIGN
		FOREIGN KEY (
			DEPT_NO
		)
		REFERENCES DEPT (
			DEPT_NO
		);

ALTER TABLE SIGN_LINE
	ADD
		CONSTRAINT FK_SIGN_TO_SIGN_LINE
		FOREIGN KEY (
			DOC_NO
		)
		REFERENCES SIGN (
			DOC_NO
		);

ALTER TABLE SIGN_LINE
	ADD
		CONSTRAINT FK_MEMBER_TO_SIGN_LINE
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE SIGN_FILE
	ADD
		CONSTRAINT FK_SIGN_TO_SIGN_FILE
		FOREIGN KEY (
			DOC_NO
		)
		REFERENCES SIGN (
			DOC_NO
		);

ALTER TABLE WEB_HARD_DETAIL
	ADD
		CONSTRAINT FK_WEB_HARD_TO_WEB_HARD_DETAIL
		FOREIGN KEY (
			WEB_HARD_NO
		)
		REFERENCES WEB_HARD (
			WEB_HARD_NO
		);

ALTER TABLE WEB_HARD_DETAIL
	ADD
		CONSTRAINT FK_MY_BOARD_TO_WEB_HARD_DETAIL
		FOREIGN KEY (
			MY_BOARD_NO
		)
		REFERENCES MY_BOARD (
			MY_BOARD_NO
		);

ALTER TABLE TODOLIST_DETAIL
	ADD
		CONSTRAINT FK_TODOLIST_TO_TODOLIST_DETAIL
		FOREIGN KEY (
			TODOLIST_NO
		)
		REFERENCES TODOLIST (
			TODOLIST_NO
		);

ALTER TABLE TODOLIST_DETAIL
	ADD
		CONSTRAINT FK_MEMBER_TO_TODOLIST_DETAIL
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE NOTICEFILE
	ADD
		CONSTRAINT FK_NOTICE_TO_NOTICEFILE
		FOREIGN KEY (
			NOTICE_NO
		)
		REFERENCES NOTICE (
			NOTICE_NO
		);

ALTER TABLE CHAT_MEMBER
	ADD
		CONSTRAINT FK_MEMBER_TO_CHAT_MEMBER
		FOREIGN KEY (
			MEM_NO2
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE CHAT_MEMBER
	ADD
		CONSTRAINT FK_CHAT_ROOM_TO_CHAT_MEMBER
		FOREIGN KEY (
			 CHAT_ROOM_NO
		)
		REFERENCES CHAT_ROOM (
			 CHAT_ROOM_NO
		);

ALTER TABLE BOARDFILE
	ADD
		CONSTRAINT FK_BOARD_TO_BOARDFILE
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		);

ALTER TABLE MESSAGESEND
	ADD
		CONSTRAINT FK_MEMBER_TO_MESSAGESEND
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE MESSAGERECEIVE
	ADD
		CONSTRAINT FK_MEMBER_TO_MESSAGERECEIVE
		FOREIGN KEY (
			RECEIVEUSERNO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE MESSAGERECEIVE
	ADD
		CONSTRAINT FK_MESSAGESEND_TO_MESSAGERECEIVE
		FOREIGN KEY (
			MESSAGESENDNO
		)
		REFERENCES MESSAGESEND (
			MESSAGESENDNO
		);


CREATE SEQUENCE SCHEDULE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE TEAM_WORK_BOARD_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE TODOLIST_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE TODOLIST_DETAIL_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE CHAT_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE CHAT_MESSAGE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE CHAT_MEMBER_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;


CREATE SEQUENCE MY_BOARD_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE M_BOARD_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE TEAM_NOTICE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE MEMBER_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE BOARD_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE WEB_HARD_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE WEB_HARD_DETAIL_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE ATTENDANCE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE POSITION_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE NOTICE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE SIGN_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE SIGN_LINE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE SIGN_FILE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE DEPT_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE STAFF_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE TEAM_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE B_POSITION_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE HITTER_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE PITCHER_RECORD_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE RECODE_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE RECORD_DETAIL_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE INNING_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE GROUPNO_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE;

CREATE SEQUENCE TEAM_WORK_BOARDGROUPNO_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE